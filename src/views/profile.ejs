<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="Responsive Web UI Kit &amp; Dashboard Template based on Bootstrap">
    <meta name="author" content="AdminKit">
    <meta name="keywords" content="adminkit, bootstrap, web ui kit, dashboard template, admin template">

    <link rel="shortcut icon" href="/img/icons/icon-48x48.png" />

    <title>inspecTwitch - <%=userData.stream.channel.display_name%></title>

    <link href="/css/app.css" rel="stylesheet">
</head>

<body>
    <div class="wrapper">
        <%- include ('./partials/sidebar.ejs') %>
        <div class="main">
            <%- include ('./partials/menu.ejs') %>
            <main class="content">
                <div class="container-fluid p-0">

                    <h1 class="h3 mb-3">Profile</h1>

                    <div class="row">
                        <div class="col-md-4 col-xl-3">
                            <div class="card mb-3">
                                <div class="card-header">
                                    <h5 class="card-title mb-0">Profile Details</h5>
                                </div>
                                <div class="card-body text-center">
                                    <img src="<%=userData.stream.channel.logo%>" alt="Christina Mason"
                                        class="img-fluid rounded-circle mb-2" width="128" height="128" />
                                    <h5 class="card-title mb-0"><%= user %></h5>
                                    <div class="text-muted mb-2" style="font-size: 11px;">
                                        <%=userData.stream.channel.description%></div>
                                </div>
                                
                                <hr class="my-0" />
                                <div class="card-body">
                                    <h5 class="h6 card-title">About</h5>
                                    <ul class="list-unstyled mb-0">
                                        <li class="mb-1"><span data-feather="twitch"
                                                class="feather-sm mr-1"></span>Link: <a
                                                href="https://twitch.tv/<%=userData.stream.channel.display_name%>"><%=userData.stream.channel.display_name%></a>
                                        </li>
                                        <li class="mb-1"><span data-feather="tv" class="feather-sm mr-1"></span>Game:
                                            <a href="#"><%=userData.stream.game%></a></li>
                                        <li class="mb-1"><span data-feather="watch"
                                                class="feather-sm mr-1"></span>Delay: <a
                                                href="#"><%=userData.stream.delay%> s</a></li>
                                        <li class="mb-1"><span data-feather="camera"class="feather-sm mr-1"></span>Resolution: <a href="#"><%=userData.stream.video_height%>p</a></li>
                                        <li class="mb-1"><span data-feather="align-left"class="feather-sm mr-1"></span>Title: <a href="#"><%=userData.stream.channel.status%>p</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-8 col-xl-9">
                            <div class="card flex-fill w-100">
                                <div class="card-header">
                                    <h5 class="card-title">Line Chart</h5>
                                </div>
                                <div class="card-body">
                                    <div class="chart">
                                        <div class="chartjs-size-monitor">
                                            <div class="chartjs-size-monitor-expand">
                                                <div class=""></div>
                                            </div>
                                            <div class="chartjs-size-monitor-shrink">
                                                <div class=""></div>
                                            </div>
                                        </div>
                                        <canvas id="data" style="display: block; width: 462px; height: 300px;"
                                            width="462" height="300" class="chartjs-render-monitor"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-12 col-xl-12">
                            <div class="card flex-fill">
                                <div class="card-header">
                                    <h5 class="card-title mb-0">Check History</h5>
                                </div>
                                <table class="table table-hover my-0">
                                    <thead>
                                        <tr>
                                            <th>History</th>

                                        </tr>
                                    </thead>
                                    <tbody id="table-online">
                                        <% files.forEach((user) => {  %>
                                        <tr>
                                            <td> <a href="/profile/<%=screenName%>/<%=user%>"> <%= user %> </a></td>
                                        </tr>
                                        <% }); %>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                </div>
            </main>
            <%- include ('./partials/footer.ejs') %>
        </div>
    </div>

    <script src="/js/app.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"
        integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <script>
        let socket = io.connect('http://localhost:3000/');
        let labs = []
        let userData = <%- JSON.stringify(userData) %>
            console.log(userData)
        socket.emit('initData', true)

        let ctx = document.getElementById('data').getContext('2d');
        let chart = new Chart(ctx, {
            type: 'line',

            data: {
                labels: [],
                datasets: []
            },

            options: {
                bezierCurve: false,
                animation: {
                    duration: 0
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });

        let streamerUsername = "<%- user %>"
        function reRenderData(data) {
            let arg = data.filter(data => data.user == streamerUsername)[0]
            console.log(arg)

            labs = []
            for (let i = 0; i < arg.viewsOverTime.length; i++) {
                labs.push(i)
            }
            chart.data.labels = labs
            chart.data.datasets[0] = {
                label: 'real Viewers',
                borderColor: 'rgb(0,0,255)',
                data: arg.viewsOverTime.map((data) => parseInt(data.chatter_count))
            }
            chart.data.datasets[1] = {
                label: 'Unidentified views',
                borderColor: 'rgb(255,0,0)',
                data: arg.viewsOverTime.map((data) => Math.abs(parseInt(data.viewers) - parseInt(data.chatter_count)))
            }
            chart.data.datasets[2] = {
                label: 'Total ',
                borderColor: 'rgb(0,255,0)',
                data: arg.viewsOverTime.map((data) => parseInt(data.viewers))
            }
            chart.update();
            /*let actualusers = (arg[arg.length - 1].ratioApiBrowser).toFixed(2) * 100
            let actualunidentified = 100 - parseFloat(actualusers)*/
        }

        socket.on('initData', (data) => {
            console.log(data)
            reRenderData(data)
        })


        socket.on('dataUpdate', (data) => {
            reRenderData(data)
        })
    </script>
</body>

</html>