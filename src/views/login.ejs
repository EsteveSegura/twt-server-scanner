<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="Tracking twitch channels">
    <meta name="author" content="GiR">

    <link rel="shortcut icon" href="/img/icons/icon-48x48.png" />

    <title>inspecTwitch</title>
    <link href="css/app.css" rel="stylesheet">
</head>

<body>
    <main class="d-flex w-100">
        <div class="container d-flex flex-column">
            <div class="row vh-100">
                <div class="col-sm-10 col-md-8 col-lg-6 mx-auto d-table h-100">
                    <div class="d-table-cell align-middle">

                        <div class="text-center mt-4">
                            <h1 class="h2">Welcome back</h1>
                            <p class="lead">
                                Sign in to your account to continue
                            </p>
                        </div>

                        <div class="card">
                            <div class="card-body">
                                <div class="m-sm-4">
                                    <div class="text-center">
                                        <img src="/img/avatars/avatar.png" alt="Charles Hall"
                                            class="img-fluid rounded-circle" width="132" height="132">
                                    </div>
                                    <form action="/login" method="POST">
                                        <div class="form-group">
                                            <label>Token</label>
                                            <input class="form-control form-control-lg" type="password" name="token"
                                                placeholder="Enter your token">
                                            <small>
                                                <a href="#">Forgot password?</a>
                                            </small>
                                        </div>
                                        <div>
                                            <div class="custom-control custom-checkbox align-items-center">
                                                <input type="checkbox" class="custom-control-input" value="remember-me"
                                                    name="remember-me" checked="">
                                                <label class="custom-control-label text-small">Remember me next
                                                    time</label>
                                            </div>
                                        </div>
                                        <div class="text-center mt-3">
                                            <input type="submit" class="btn btn-lg btn-primary" value="Sign in">
                                            <!-- <button type="submit" class="btn btn-lg btn-primary">Sign in</button> -->
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </main>


    <script src="/js/vendor.js"></script>
    <script src="/js/app.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"
        integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <script>
        let socket = io.connect('http://localhost:8729/');
        let dateUpdate = Date.now()

        socket.emit('initData', true)

        socket.on('initData', (data) => {
            reRenderData(data)
        })

        socket.on('dataUpdate', (data) => {
            reRenderData(data)
        })

        function reRenderData(data) {
            dateUpdate = Date.now()
            console.log(data)
            $("#table-online").empty()
            let currentViews = 0
            let currentChatters = 0
            let currentOnline = data.filter(streamer => streamer.currentStatus)
            let currentUnidentified = 0
            for (let i = 0; i < data.length; i++) {
                console.log(data[i])
                if (data[i].currentStatus) {
                    $("#table-online").append(`<tr><td><a href="profile/${data[i].user}/">${data[i].user}</a></td><td class="d-none d-xl-table-cell text-center">${data[i].viewsOverTime[data[i].viewsOverTime.length - 1].chatter_count}</td><td class="d-none d-xl-table-cell text-center">${data[i].viewsOverTime[data[i].viewsOverTime.length - 1].viewers}</td><td class="d-none d-md-table-cell text-center">${Math.abs(data[i].viewsOverTime[data[i].viewsOverTime.length - 1].chatter_count - data[i].viewsOverTime[data[i].viewsOverTime.length - 1].viewers)}</td></tr>`)
                    currentViews += data[i].viewsOverTime[data[i].viewsOverTime.length - 1].viewers
                    currentChatters += data[i].viewsOverTime[data[i].viewsOverTime.length - 1].chatter_count
                    currentUnidentified += Math.abs(data[i].viewsOverTime[data[i].viewsOverTime.length - 1].chatter_count - data[i].viewsOverTime[data[i].viewsOverTime.length - 1].viewers)
                    console.log(currentUnidentified)
                }
            }
            new Chart(document.getElementById("chartjs-pie"), {
                type: "pie",
                data: {
                    labels: ["Current viewers", "Current chatters", "Current unidentified"],
                    datasets: [{
                        data: [currentViews, currentChatters, currentUnidentified],
                        backgroundColor: [
                            window.theme.primary,
                            window.theme.warning,
                            window.theme.danger,
                        ],
                        borderColor: "transparent"
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                    legend: {
                        display: false
                    }
                }
            });



            $("#online-viewers-count").text(currentViews)
            $("#online-chatters-count").text(currentChatters)
            $("#online-streamers-count").text(currentOnline.length)
            $("#online-unidentified-count").text(currentUnidentified)
        }

        setInterval(() => {
            let currentTime = Date.now();
            let dif = dateUpdate - currentTime

            let timeSinceDates = dif / 1000
            let seconds = Math.abs(timeSinceDates)
            $(".time-since").text(`${Math.ceil(seconds)}s last update `)
        }, 1000);


    </script>
</body>

</html>